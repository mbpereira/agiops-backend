on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
        description: Name of the target environment
      ref:
        type: string
        required: true
        description: The tag or SHA to checkout
env:
  REGISTRY: ${{ vars.REGION }}-docker.pkg.dev 
  IMAGE_NAME: ${{ env.REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/${{ vars.ARTIFACT_REPO }}/${{ vars.SERVICE_NAME }}
jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}
      - name: Docker Auth
        id: docker-auth
        uses: docker/login-action@v3
        with:
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
          registry: ${{ env.REGISTRY }}
      - name: Build, tag and push container
        id: build-image
        uses: docker/build-push-action@v3
        with:
          context: ${{ vars.GITHUB_WORKSPACE }}
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ inputs.ref }}
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    if: needs.build.result == 'success'
    needs: [build]
    steps:
      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}
      - id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ vars.SERVICE_NAME }}
          image: ${{ env.IMAGE_NAME }}:${{ inputs.ref }}
          flags: --platform managed --allow-unauthenticated
      - name: Show Deployed URL
        run: echo "${{ steps.deploy.outputs.url }}"